name: Run checks, tests and docker build

on: push

jobs:
  lint:
    runs-on: ubuntu-22.04

    steps:

    - name: Set up Java 21
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '21'

    - uses: actions/checkout@v5

    - uses: actions/cache@v4
      with: { path: "~/.m2", key: "${{ runner.os }}-m2" }

    - name: Install clj runtime
      run: |
        .github/workflows/install-binaries.sh
        echo "${PWD}/bin" >> $GITHUB_PATH

    - name: Run linters
      run: make lint

  test:
    runs-on: ubuntu-22.04

    steps:

    - name: Set up Java 21
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '21'

    - uses: actions/checkout@v5

    - uses: actions/cache@v4
      with: { path: "~/.m2", key: "${{ runner.os }}-m2" }

    - name: Install clj runtime
      run: |
        .github/workflows/install-binaries.sh
        echo "${PWD}/bin" >> $GITHUB_PATH

    - name: Run tests
      env:
        CLIENTS_INFO_PATH: ${{ secrets.CLIENTS_INFO_PATH }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        GATEWAY_PASSWORD: ${{ secrets.GATEWAY_PASSWORD }}
        GATEWAY_ROOT_URL: ${{ secrets.GATEWAY_ROOT_URL }}
        GATEWAY_USER: ${{ secrets.GATEWAY_USER }}
        KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        KEYSTORE_JKS_B64: ${{ secrets.KEYSTORE_JKS_B64 }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        RIO_RECIPIENT_OIN: ${{ secrets.RIO_RECIPIENT_OIN }}
        RIO_READ_URL: ${{ secrets.RIO_READ_URL }}
        RIO_UPDATE_URL: ${{ secrets.RIO_UPDATE_URL }}
        RIO_SENDER_OIN: ${{ secrets.RIO_SENDER_OIN }}
        SURF_CONEXT_CLIENT_ID: ${{ secrets.SURF_CONEXT_CLIENT_ID }}
        SURF_CONEXT_CLIENT_SECRET: ${{ secrets.SURF_CONEXT_CLIENT_SECRET }}
        SURF_CONEXT_INTROSPECTION_ENDPOINT: ${{ secrets.SURF_CONEXT_INTROSPECTION_ENDPOINT }}
        TOKEN_ENDPOINT: ${{ secrets.TOKEN_ENDPOINT }}
        KEYSTORE: test/keystore.jks

      run: make test

    - name: Start Redis
      uses: supercharge/redis-github-action@1.8.0
      with:
        redis-version: 6.2

    - name: Run tests with redis
      run: make test-redis

  specs:
    runs-on: ubuntu-22.04

    steps:

    - name: Set up Java 21
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '21'


    - uses: actions/checkout@v5
    - uses: actions/cache@v4
      with: { path: "~/.m2", key: "${{ runner.os }}-m2" }

    - name: Install clj runtime
      run: |
        .github/workflows/install-binaries.sh
        echo "${PWD}/bin" >> $GITHUB_PATH

    - name: Proof data specs
      run: make proof-specs

  uberjar:
    runs-on: ubuntu-22.04

    steps:
    - name: Set up Java 21
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '21'

    - uses: actions/checkout@v5

    - uses: actions/cache@v4
      with: { path: "~/.m2", key: "${{ runner.os }}-m2" }

    - name: Install clj runtime
      run: |
        .github/workflows/install-binaries.sh
        echo "${PWD}/bin" >> $GITHUB_PATH

    - name: Run compile
      run: make jar

  docker-build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v5

    - name: Run docker build
      run: docker build -t eduhub-rio-mapper .
