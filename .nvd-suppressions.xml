<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
  <!-- See also: https://jeremylong.github.io/DependencyCheck/general/suppression.html -->
  <suppress>
    <notes>
      file name: snakeyaml-1.33.jar

      We're not vulnerable because the YAML we're processing is under our
      control.

      See also:

        https://bitbucket.org/snakeyaml/snakeyaml/issues/531/stackoverflow-oss-fuzz-47081

      and:

        https://github.com/jeremylong/DependencyCheck/issues/4919
    </notes>
    <packageUrl regex="true">^pkg:maven/org\.yaml/snakeyaml@.*$</packageUrl>
    <vulnerabilityName>CVE-2022-38752</vulnerabilityName>
  </suppress>
  <suppress>
    <notes>
      Library: santuario/xmlsec
      We're not vulnerable because we don't parse untrusted XML.
    </notes>
    <filePath regex="true">.*</filePath>
    <cve>CVE-2022-40152</cve>
  </suppress>
  <suppress>
    <notes>
      Library: Jetty 11.0.15
      Jetty accepts the `+` character proceeding the content-length value in a HTTP/1 header field.
      This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.
      There is no known exploit scenario, but it is conceivable that request smuggling could result
      if jetty is used in combination with a server that does not close the connection after sending such a 400 response.
    </notes>
    <filePath regex="true">.*</filePath>
    <cve>CVE-2023-40167</cve>
  </suppress>
  <suppress>
    <notes>
      Library: Jetty 11.0.15
      Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one.
      We do not use the CgiServlet.
    </notes>
    <filePath regex="true">.*</filePath>
    <cve>CVE-2023-36479</cve>
  </suppress>
  <suppress>
    <notes>
      Library: Logback-json-core
      Vulnerabilities in json-c
      We do not use the json-c. Perhaps there's a string match with logback-json-classic
    </notes>
    <filePath regex="true">.*</filePath>
    <cve>CVE-2020-12762</cve>
  </suppress>
  <suppress>
    <notes>
      Library: Logback-json-core
      Vulnerabilities in json-c
      We do not use the json-c. Perhaps there's a string match with logback-json-classic
    </notes>
    <filePath regex="true">.*</filePath>
    <cve>CVE-2013-6370</cve>
  </suppress>
  <suppress>
    <notes>
      Library: Logback-json-core
      Vulnerabilities in json-c
      We do not use the json-c. Perhaps there's a string match with logback-json-classic
    </notes>
    <filePath regex="true">.*</filePath>
    <cve>CVE-2013-6371</cve>
  </suppress>
  <suppress>
  <notes>
    Library: Jetty 11.0.15
    If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated.
    We do not use the OpenIdAuthenticator or the LoginService.
  </notes>
  <filePath regex="true">.*</filePath>
  <cve>CVE-2023-41900</cve>
  </suppress>
  <suppress>
    <notes>
      Libraries: several apache commons libraries
      We're not vulnerable because we don't use FTP.
    </notes>
    <filePath regex="true">.*</filePath>
    <cve>CVE-2021-37533</cve>
  </suppress>
  <suppress>
    <notes>
      file name: snakeyaml-1.33.jar

      We're not vulnerable because the YAML we're processing is under
      our control.
    </notes>
    <packageUrl regex="true">^pkg:maven/org\.apache\.commons\.fileupload/snakeyaml@.*$</packageUrl>
    <vulnerabilityName>CVE-2022-41854</vulnerabilityName>
  </suppress>
  <suppress>
    <notes>
      file name: jackson-core-2.14.2.jar

      False positive: See https://github.com/jeremylong/DependencyCheck/issues/5502
      Can be removed after dependency-check is updated.
    </notes>
    <packageUrl regex="true">^pkg:maven/com\.fasterxml\.jackson\.core/jackson\-core@.*$</packageUrl>
    <cve>CVE-2022-45688</cve>
  </suppress>
  <suppress>
    <notes>
      file name: commons-fileupload-1.4.jar

      We're not vulnerable because we don't allow uploading files.
    </notes>
    <filePath regex="true">.*</filePath>
    <cve>CVE-2023-24998</cve>
  </suppress>
  <suppress>
    <notes>
      file name: data.priority-map-1.1.0.jar

      False positive, see also:

        https://github.com/jeremylong/DependencyCheck/issues/4720
    </notes>
    <packageUrl regex="true">^pkg:maven/org\.clojure/data\.priority\-map@.*$</packageUrl>
    <cpe>cpe:/a:priority-software:priority</cpe>
  </suppress>
    <suppress>
    <notes>
      file name: woodstox-core-6.5.0.jar

      False positive: CVE does not apply to woodstox
    </notes>
    <filePath regex="true">.*</filePath>
    <cve>CVE-2023-34411</cve>
  </suppress>
  <suppress>
    <notes>
      This CVE is a false positive according to the Jackson project maintainers.
      See https://github.com/FasterXML/jackson-databind/issues/3972
    </notes>
    <cve>CVE-2023-35116</cve>
  </suppress>
</suppressions>
